// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using AnnoBibLibrary.Shared;
using AnnoBibLibraryMac.DataSources;
using AnnoBibLibraryMac.ControlDelegates;
using AnnoBibLibrary.Shared.Fields;
using AnnoBibLibrary.Shared.Bibliography;

namespace AnnoBibLibraryMac
{
	public partial class NewSourceViewController : NSViewController
	{
		public NewSourceViewController (IntPtr handle) : base (handle)
		{
		}

        DataSourceOutlineViewSourceFields DataSource = new DataSourceOutlineViewSourceFields();

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            string[] citationFormatsStr = GlobalResources.CitationFormatsFormatted;
            NSString[] citationValues = new NSString[citationFormatsStr.Length];
            for (int i = 0; i < citationValues.Length; ++i)
                citationValues[i] = new NSString(citationFormatsStr[i]);

            ComboBoxFormats.Add(citationValues);

            OutlineViewNewSourceFields.DataSource = DataSource;
            OutlineViewNewSourceFields.Delegate = new DelegateOutlineViewSourceFields(DataSource);

            ComboBoxFormats.StringValue = "Print";
            FormatSourceFields(GlobalResources.GetFormat("Print"));
        }

        #region XCode Methods
        partial void OnTitleUnknownCheck(NSObject sender)
        {
            if (((NSButton)sender).State == NSCellStateValue.Off)
                TextFieldTitle.Enabled = true;

            else TextFieldTitle.Enabled = false;
        }

        partial void OnFormatChange(NSObject sender)
        {
            FormatSourceFields(GlobalResources.GetFormat(ComboBoxFormats.SelectedValue.ToString()));
        }
        #endregion

        #region Private Methods
        private void FormatSourceFields(CitationFormat format)
        {
            DataSource.FieldInfo.Clear();
            foreach(var fieldInfo in format.Fields) 
            {
                if (fieldInfo.Key.ToLower() != "title")
                {
                    DataSource.FieldInfo.Add(
                        new DataSourceOutlineViewSourceFieldsInfo(
                            fieldInfo
                        )
                    );
                }
            }

            OutlineViewNewSourceFields.ReloadData();
        }
        #endregion
    }
}
